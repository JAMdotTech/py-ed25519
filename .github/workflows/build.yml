name: Build wheels

on:
  push:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Update rustup
        run: rustup self update
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - name: Build
        if: matrix.target == 'x64'
        run: cargo build --release
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -i python --release --out dist
          rust-toolchain: nightly
      - name: Install built wheel
        run: |
          pip install py-ed25519-zebra-bindings --no-index --find-links dist --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - name: Build
        run: cargo build --release
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          rust-toolchain: nightly
          manylinux: auto
          args: -i python${{ matrix.python-version }} --release --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  muslwheels_x86:
    name: Build musllinux wheels for x86
    runs-on: ubuntu-latest

    env:
      CIBW_BUILD_VERBOSITY: 1
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y"
      CIBW_ARCHS_LINUX: "auto64"
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_BUILD: "*-musllinux_x86_64"
      CIBW_SKIP: "cp27-* cp34-* cp35-* cp36-*"

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        with:
          output-dir: dist


      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  aarch64_wheels:
    name: Build wheels for aarch64 linux
    runs-on: ubuntu-latest

    env:
      CIBW_BUILD_VERBOSITY: 1
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y"
      CIBW_ARCHS_LINUX: "aarch64"
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_BUILD: "*-musllinux_aarch64 *-manylinux_aarch64"
      CIBW_SKIP: "cp27-* cp34-* cp35-* cp36-*"

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        with:
          output-dir: dist


      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist


